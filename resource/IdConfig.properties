#当前，snowflake的算法设计中，除了毫秒与序列号，中间只设置了workerId和datacenterId两部分. 现采用配置方式，结合各公司具体的业务逻辑和并发量，配置Id结构
#fields表示要切割Id的字段，第一个为millis（毫秒数），最后一个为sequence（毫秒内的序列号），这两个为固定的，但长度可变
#中间可配置任意字段，但要保证总长度的和为64（首部1位标识符，表示正负）；示例中配置了3个字段：机房、机架和机器号

#Id结构中间字段数量（毫秒和序列号是不可或缺的两个）
factorNum = 3

#Id结构组成其它字段，用&符号隔开（机房号+机架号+机器号）
factors = engineRoom & frame & worker

#毫秒位数（41位，可以使用69年）[key固定，value变动]
millisBits = 41

#开始时间戳（2015-01-01）[key固定，value变动]
startTimeStamp = 1420041600000

#机房号位数[key由field产生，value变动]
engineRoomBits = 2

#机架号位数[key由field产生，value变动]
frameBits = 3

#机器号位数[key由field产生，value变动]
workerBits = 5

#序列号位数（12位，同一机器，同一时间戳可产生4096个序列号）[key固定，value变动]
sequenceBits = 12
